'SOURCE_P_SHARING',
'SOURCE_UNIT',
'SOURCE_INIT_KNOWLEDGE',
'SOURCE_DEGREE',
'SOURCE_CONTRIBUTION',
'SOURCE_CONTRIBUTION_POS',
'SOURCE_CONTRIBUTION_NEG'
)])
colnames(net_node) <- c(
'id',
'pSharing',
'unit',
'knowledge0',
'degree',
'contribution',
'contributionPos',
'contributionNeg'
)
net_edge <-
distinct(dat[, c('SOURCE', 'TARGET', 'IS_CONNECTED', 'CONTRIBUTION')])
net_edge <- na.omit(net_edge)
colnames(net_edge) <-
c('from', 'to', 'isConnected', 'contribution')
if( is_contribution ){
net_edge <- net_edge[net_edge$contribution>0,]
}else{
net_edge <- net_edge[net_edge$isConnected==1,]
}
net <- graph_from_data_frame(vertices = net_node,
d = net_edge,
directed = ifelse(is_contribution, F, T))
set_vertex_attr(net, 'ec', value = eigen_centrality(net)$vector)
layout <- create_layout(net, layout = 'fr')
pp <- ggraph(layout)
if( is_contribution ) {
pp <- pp +
geom_edge_link(aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(size = node_size,
color = 'black')
} else{
pp <- pp +
geom_edge_link(color = 'black',
width = edge_width,
alpha = edge_alpha) +
geom_node_point(aes(size = degree),
color = 'black') +
scale_size_continuous(range = c(0, node_size))
}
pp <- pp +
theme_void() +
theme(legend.position = 'none')
pp
file_out <- paste0(dirname(file), '\\',
gsub('csv', 'png', basename(file)))
ggsave(
file_out,
units = 'in',
width = fig_width,
height = fig_height,
dpi = fig_dpi
)
print(file_out)
}
}
files2print(choose.files())
library(igraph)
library(ggplot2)
library(ggraph)
library(tidygraph)
library(ggforce)
library(graphlayouts)
library(oaqc)
library(sna)
library(dplyr)
library(viridis)
library(ggsci)
# rm(list=ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
fig_width <- 2.25
fig_height <- 2.25
fig_dpi <- 600
node_size <- 2
edge_width <- .1
edge_alpha <- .25
is_contribution <- F
files2print <- function(list_file) {
for (file in list_file) {
dat <- read.csv(file)
net_node <-
distinct(dat[, c(
'SOURCE',
'SOURCE_P_SHARING',
'SOURCE_UNIT',
'SOURCE_INIT_KNOWLEDGE',
'SOURCE_DEGREE',
'SOURCE_CONTRIBUTION',
'SOURCE_CONTRIBUTION_POS',
'SOURCE_CONTRIBUTION_NEG'
)])
colnames(net_node) <- c(
'id',
'pSharing',
'unit',
'knowledge0',
'degree',
'contribution',
'contributionPos',
'contributionNeg'
)
net_edge <-
distinct(dat[, c('SOURCE', 'TARGET', 'IS_CONNECTED', 'CONTRIBUTION')])
net_edge <- na.omit(net_edge)
colnames(net_edge) <-
c('from', 'to', 'isConnected', 'contribution')
if( is_contribution ){
net_edge <- net_edge[net_edge$contribution>0,]
}else{
net_edge <- net_edge[net_edge$isConnected==1,]
}
net <- graph_from_data_frame(vertices = net_node,
d = net_edge,
directed = ifelse(is_contribution, F, T))
set_vertex_attr(net, 'ec', value = eigen_centrality(net)$vector)
layout <- create_layout(net, layout = 'fr')
pp <- ggraph(layout)
if( is_contribution ) {
pp <- pp +
geom_edge_link(aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(size = node_size,
color = 'black')
} else{
pp <- pp +
geom_edge_link(color = 'black',
width = edge_width,
alpha = edge_alpha) +
geom_node_point(aes(size = degree),
color = 'black') +
scale_size_continuous(range = c(0, node_size))
}
pp <- pp +
theme_void() +
theme(legend.position = 'none')
pp
file_out <- paste0(dirname(file), '\\',
gsub('csv', 'png', basename(file)))
ggsave(
file_out,
units = 'in',
width = fig_width,
height = fig_height,
dpi = fig_dpi
)
print(file_out)
}
}
files2print(choose.files())
library(igraph)
library(ggplot2)
library(ggraph)
library(tidygraph)
library(ggforce)
library(graphlayouts)
library(oaqc)
library(sna)
library(dplyr)
library(viridis)
library(ggsci)
# rm(list=ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
fig_width <- 2.25
fig_height <- 2.25
fig_dpi <- 600
node_size <- 2
edge_width <- .1
edge_alpha <- .25
is_contribution <- F
files2print <- function(list_file) {
for (file in list_file) {
dat <- read.csv(file)
net_node <-
distinct(dat[, c(
'SOURCE',
'SOURCE_P_SHARING',
'SOURCE_UNIT',
'SOURCE_INIT_KNOWLEDGE',
'SOURCE_DEGREE',
'SOURCE_CONTRIBUTION',
'SOURCE_CONTRIBUTION_POS',
'SOURCE_CONTRIBUTION_NEG'
)])
colnames(net_node) <- c(
'id',
'pSharing',
'unit',
'knowledge0',
'degree',
'contribution',
'contributionPos',
'contributionNeg'
)
net_edge <-
distinct(dat[, c('SOURCE', 'TARGET', 'IS_CONNECTED', 'CONTRIBUTION')])
net_edge <- na.omit(net_edge)
colnames(net_edge) <-
c('from', 'to', 'isConnected', 'contribution')
if( is_contribution ){
net_edge <- net_edge[net_edge$contribution>0,]
}else{
net_edge <- net_edge[net_edge$isConnected==1,]
}
net <- graph_from_data_frame(vertices = net_node,
d = net_edge,
directed = ifelse(is_contribution, F, T))
set_vertex_attr(net, 'ec', value = eigen_centrality(net)$vector)
layout <- create_layout(net, layout = 'fr')
pp <- ggraph(layout)
if( is_contribution ) {
pp <- pp +
geom_edge_link(aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(size = node_size,
color = 'black')
} else{
pp <- pp +
geom_edge_link(color = 'black',
width = edge_width,
alpha = edge_alpha) +
geom_node_point(aes(size = degree),
color = 'black') +
scale_size_continuous(range = c(0, node_size))
}
pp <- pp +
theme_void() +
theme(legend.position = 'none')
pp
file_out <- paste0(dirname(file), '\\',
gsub('csv', 'png', basename(file)))
ggsave(
file_out,
units = 'in',
width = fig_width,
height = fig_height,
dpi = fig_dpi
)
print(file_out)
}
}
files2print(choose.files())
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(R.matlab)
library(tidyverse) # tibble (dataframe)
library(ggplot2) # Plot
library(ggrepel) # geom_text_repel
library(scales) # parse_format() function
library(viridis) # colormap
library(ggsci) # colormap
library(svglite) # print in *.svg format
library(metR) # geom text contour
# rm(list=c('data'))
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
file_data <- file.choose()
data <- readMat(file_data)
fig_id <- tools::file_path_sans_ext((basename(file_data)))
set_fig0_network_type <- 3
df_fig0 <- data.frame(beta = t(data$para.a.b),
efficiency = data$r.effi.avg[set_fig0_network_type, , 1, 1])
fig0 <- ggplot(df_fig0, aes(x = beta, y = efficiency)) +
geom_line() +
xlab(bquote(beta
~ '('
~ .(network_character_label[set_fig0_network_type])
~ ')')) +
ylab('Efficiency of\nOrganizational Design') +
# scale_y_continuous
theme_bw() +
theme(
text = element_text(size = label_size, color = 'black'),
axis.title = element_text(size = label_size, color = 'black'),
axis.text = element_text(size = tick_label_size, color = 'black'),
legend.title = element_blank(),
legend.box = 'vertical',
legend.position = 'right'
)
fig0
fig0_params_label <- paste0('fig0',
'(', network_type_label[set_fig0_network_type],')')
ggsave(
paste0(fig_id,
'_',
fig0_params_label,
'.png'),
plot = fig0,
units = 'in',
width = 4,
height = 2,
dpi = fig_dpi
)
set_fig0_network_type <- 1:3
df_fig0 <- data.frame()
for( nt in set_fig0_network_type ){
df_next <- data.frame(
nt = network_type_label[nt],
beta = t(data$para.a.b),
efficiency = data$r.effi.avg[nt, , 1, 1]
)
df_fig0 <- rbind(df_fig0, df_next)
}
fig0 <- ggplot(df_fig0, aes(x = beta, y = efficiency, color = nt)) +
geom_line() +
xlab(bquote(beta
~ '(Organizational Design)')) +
ylab('Efficiency of\nOrganizational Design') +
scale_color_npg() +
theme_bw() +
theme(
text = element_text(size = label_size, color = 'black'),
axis.title = element_text(size = label_size, color = 'black'),
axis.text = element_text(size = tick_label_size, color = 'black'),
legend.title = element_blank(),
legend.box = 'vertical',
legend.position = 'right'
)
fig0
fig0_params_label <- paste0('fig0alt')
ggsave(
paste0(fig_id,
'_',
fig0_params_label,
'.png'),
plot = fig0,
units = 'in',
width = 4,
height = 2,
dpi = fig_dpi
)
# rm(list=c('data'))
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
file_data <- file.choose()
data <- readMat(file_data)
fig_id <- tools::file_path_sans_ext((basename(file_data)))
set_fig0_network_type <- 1:3
df_fig0 <- data.frame()
for( nt in set_fig0_network_type ){
df_next <- data.frame(
nt = network_type_label[nt],
beta = t(data$para.a.b),
efficiency = data$r.effi.avg[nt, , 1, 1]
)
df_fig0 <- rbind(df_fig0, df_next)
}
fig0 <- ggplot(df_fig0, aes(x = beta, y = efficiency, color = nt)) +
geom_line() +
xlab(bquote(beta
~ '(Organizational Design)')) +
ylab('Efficiency of\nOrganizational Design') +
scale_color_npg() +
theme_bw() +
theme(
text = element_text(size = label_size, color = 'black'),
axis.title = element_text(size = label_size, color = 'black'),
axis.text = element_text(size = tick_label_size, color = 'black'),
legend.title = element_blank(),
legend.box = 'vertical',
legend.position = 'right'
)
fig0
fig0_params_label <- paste0('fig0alt')
ggsave(
paste0(fig_id,
'_',
fig0_params_label,
'.png'),
plot = fig0,
units = 'in',
width = 4,
height = 2,
dpi = fig_dpi
)
# rm(list=c('data'))
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
file_data <- file.choose()
data <- readMat(file_data)
fig_id <- tools::file_path_sans_ext((basename(file_data)))
set_fig0_network_type <- 1:3
df_fig0 <- data.frame()
for( nt in set_fig0_network_type ){
df_next <- data.frame(
nt = network_type_label[nt],
beta = t(data$para.a.b),
efficiency = data$r.effi.avg[nt, , 1, 1]
)
df_fig0 <- rbind(df_fig0, df_next)
}
fig0 <- ggplot(df_fig0, aes(x = beta, y = efficiency, color = nt)) +
geom_line() +
xlab(bquote(beta
~ '(Organizational Design)')) +
ylab('Efficiency of\nOrganizational Design') +
scale_color_npg() +
theme_bw() +
theme(
text = element_text(size = label_size, color = 'black'),
axis.title = element_text(size = label_size, color = 'black'),
axis.text = element_text(size = tick_label_size, color = 'black'),
legend.title = element_blank(),
legend.box = 'vertical',
legend.position = 'right'
)
fig0
fig0_params_label <- paste0('fig0alt')
ggsave(
paste0(fig_id,
'_',
fig0_params_label,
'.png'),
plot = fig0,
units = 'in',
width = 4,
height = 2,
dpi = fig_dpi
)
# rm(list=c('data'))
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
file_data <- file.choose()
data <- readMat(file_data)
fig_id <- tools::file_path_sans_ext((basename(file_data)))
set_fig0_network_type <- 1:3
df_fig0 <- data.frame()
for( nt in set_fig0_network_type ){
df_next <- data.frame(
nt = network_type_label[nt],
beta = t(data$para.a.b),
efficiency = data$r.effi.avg[nt, , 1, 1]
)
df_fig0 <- rbind(df_fig0, df_next)
}
fig0 <- ggplot(df_fig0, aes(x = beta, y = efficiency, color = nt)) +
geom_line() +
xlab(bquote(beta
~ '(Organizational Design)')) +
ylab('Efficiency of\nOrganizational Design') +
scale_color_npg() +
theme_bw() +
theme(
text = element_text(size = label_size, color = 'black'),
axis.title = element_text(size = label_size, color = 'black'),
axis.text = element_text(size = tick_label_size, color = 'black'),
legend.title = element_blank(),
legend.box = 'vertical',
legend.position = 'right'
)
fig0
fig0_params_label <- paste0('fig0alt')
ggsave(
paste0(fig_id,
'_',
fig0_params_label,
'.png'),
plot = fig0,
units = 'in',
width = 4,
height = 2,
dpi = fig_dpi
)
# rm(list=c('data'))
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
file_data <- file.choose()
data <- readMat(file_data)
fig_id <- tools::file_path_sans_ext((basename(file_data)))
set_fig0_network_type <- 1:3
df_fig0 <- data.frame()
for( nt in set_fig0_network_type ){
df_next <- data.frame(
nt = network_type_label[nt],
beta = t(data$para.a.b),
efficiency = data$r.effi.avg[nt, , 1, 1]
)
df_fig0 <- rbind(df_fig0, df_next)
}
fig0 <- ggplot(df_fig0, aes(x = beta, y = efficiency, color = nt)) +
geom_line() +
xlab(bquote(beta
~ '(Organizational Design)')) +
ylab('Efficiency of\nOrganizational Design') +
scale_color_npg() +
theme_bw() +
theme(
text = element_text(size = label_size, color = 'black'),
axis.title = element_text(size = label_size, color = 'black'),
axis.text = element_text(size = tick_label_size, color = 'black'),
legend.title = element_blank(),
legend.box = 'vertical',
legend.position = 'right'
)
fig0
fig0_params_label <- paste0('fig0alt')
ggsave(
paste0(fig_id,
'_',
fig0_params_label,
'.png'),
plot = fig0,
units = 'in',
width = 4,
height = 2,
dpi = fig_dpi
)
