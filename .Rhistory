directed = ifelse(is_contribution, F, T)
)
set_vertex_attr(net, 'ec', value = eigen_centrality(net)$vector)
layout <- create_layout(net, layout = 'fr')
pp <- ggraph(layout)
if (is_contribution) {
if( is_ratio) {
pp <- pp +
# geom_edge_link(aes(alpha = contribution),
geom_edge_fan(
aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(aes(size = contribution,
fill = type),
# color = 'black',
shape = 21
) +
scale_alpha_continuous(range = c(0, edge_alpha), guide = 'none') +
scale_size_continuous(range = c(node_size/5, node_size), guide = 'none') +
scale_fill_manual(values = fill_npg)
}else{
pp <- pp +
geom_edge_fan(aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(aes(size = contribution),
shape = 21,
color = 'black',
fill = 'gray'
) +
scale_size_continuous(range = c(node_size/5, node_size)) +
scale_alpha_continuous(range = c(0, edge_alpha))
}
} else{
pp <- pp +
geom_edge_fan(color = 'black',
width = edge_width,
alpha = edge_alpha) +
geom_node_point(aes(size = degree),
shape = 21,
color = 'black',
fill = 'gray'
) +
scale_size_continuous(range = c(node_size/5, node_size))
}
pp <- pp +
theme_void() +
# theme(legend.position = 'none')
theme(
legend.text = element_text(size=legend_size, color='black'),
legend.title = element_blank(),
legend.text.align = 0,
legend.position = 'bottom'
) +
guides(
alpha = 'none',
# fill ='none'
fill = guide_legend(nrow = 2, byrow = TRUE)
)
pp
file_out <- paste0(dirname(file), '\\',
gsub('csv', 'png', basename(file)))
ggsave(
file_out,
units = 'in',
width = fig_width,
height = fig_height,
dpi = fig_dpi
)
print(file_out)
}
}
files2print(choose.files())
library(igraph)
library(ggplot2)
library(ggraph)
library(tidygraph)
library(ggforce)
library(graphlayouts)
library(oaqc)
library(sna)
library(dplyr)
library(viridis)
library(ggsci)
# rm(list=ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
fig_width <- 2.25
fig_height <- 2.25
fig_dpi <- 1200
node_size <- 2
edge_width <- .1
edge_alpha <- .25
legend_size <- 8
is_contribution <- T
is_ratio <- T
net_node <- NULL
net_edge <- NULL
p_sharing_label <- c('Knowledge Sharer', 'Knowledge Seeker')
fill_npg <- pal_npg(palette = c('nrc'), alpha = 1)(2)
names(fill_npg) <- p_sharing_label
files2print <- function(list_file) {
for (file in list_file) {
dat <- read.csv(file)
net_node <<-
distinct(dat[, c(
'SOURCE',
'SOURCE_P_SHARING',
'SOURCE_UNIT',
'SOURCE_INIT_KNOWLEDGE',
'SOURCE_DEGREE',
'SOURCE_CONTRIBUTION',
'SOURCE_CONTRIBUTION_POS',
'SOURCE_CONTRIBUTION_NEG'
)])
colnames(net_node) <<- c(
'id',
'pSharing',
'unit',
'knowledge0',
'degree',
'contribution',
'contributionPos',
'contributionNeg'
)
net_edge <<-
distinct(dat[, c('SOURCE', 'TARGET', 'IS_CONNECTED', 'CONTRIBUTION')])
net_edge <<- na.omit(net_edge)
colnames(net_edge) <<-
c('from', 'to', 'isConnected', 'contribution')
if (is_contribution) {
edge_alpha <- .25
net_edge <<- net_edge[net_edge$contribution > 0, ]
} else{
net_edge <<- net_edge[net_edge$isConnected == 1, ]
}
if (is_contribution) {
edge_alpha <- .25
net_node$type <<- ifelse(net_node$pSharing > .5, p_sharing_label[1], p_sharing_label[2])
# net_node <<- net_node[net_node$contribution > 0,] # This removes "pure taker"?
} else{
net_edge <<- net_edge[net_edge$from > net_edge$to, ]
}
net <- graph_from_data_frame(
vertices = net_node,
d = net_edge,
directed = ifelse(is_contribution, F, T)
)
set_vertex_attr(net, 'ec', value = eigen_centrality(net)$vector)
layout <- create_layout(net, layout = 'fr')
pp <- ggraph(layout)
if (is_contribution) {
if( is_ratio) {
pp <- pp +
# geom_edge_link(aes(alpha = contribution),
geom_edge_fan(
aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(aes(size = contribution,
fill = type),
# color = 'black',
shape = 21
) +
scale_alpha_continuous(range = c(0, edge_alpha), guide = 'none') +
scale_size_continuous(range = c(node_size/5, node_size), guide = 'none') +
scale_fill_manual(values = fill_npg)
}else{
pp <- pp +
geom_edge_fan(aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(aes(size = contribution),
shape = 21,
color = 'black',
fill = 'gray'
) +
scale_size_continuous(range = c(node_size/5, node_size)) +
scale_alpha_continuous(range = c(0, edge_alpha))
}
} else{
pp <- pp +
geom_edge_fan(color = 'black',
width = edge_width,
alpha = edge_alpha) +
geom_node_point(aes(size = degree),
shape = 21,
color = 'black',
fill = 'gray'
) +
scale_size_continuous(range = c(node_size/5, node_size))
}
pp <- pp +
theme_void() +
# theme(legend.position = 'none')
theme(
legend.text = element_text(size=legend_size, color='black'),
legend.title = element_blank(),
legend.text.align = 0,
legend.position = 'bottom'
) +
guides(
alpha = guide_legend(nrow = 2, byrow = TRUE),
# fill ='none'
fill = guide_legend(nrow = 2, byrow = TRUE)
)
pp
file_out <- paste0(dirname(file), '\\',
gsub('csv', 'png', basename(file)))
ggsave(
file_out,
units = 'in',
width = fig_width,
height = fig_height,
dpi = fig_dpi
)
print(file_out)
}
}
files2print(choose.files())
library(igraph)
library(ggplot2)
library(ggraph)
library(tidygraph)
library(ggforce)
library(graphlayouts)
library(oaqc)
library(sna)
library(dplyr)
library(viridis)
library(ggsci)
# rm(list=ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
fig_width <- 2.25
fig_height <- 2.25
fig_dpi <- 1200
node_size <- 2
edge_width <- .1
edge_alpha <- .25
legend_size <- 8
is_contribution <- T
is_ratio <- T
net_node <- NULL
net_edge <- NULL
p_sharing_label <- c('Knowledge Sharer', 'Knowledge Seeker')
fill_npg <- pal_npg(palette = c('nrc'), alpha = 1)(2)
names(fill_npg) <- p_sharing_label
files2print <- function(list_file) {
for (file in list_file) {
dat <- read.csv(file)
net_node <<-
distinct(dat[, c(
'SOURCE',
'SOURCE_P_SHARING',
'SOURCE_UNIT',
'SOURCE_INIT_KNOWLEDGE',
'SOURCE_DEGREE',
'SOURCE_CONTRIBUTION',
'SOURCE_CONTRIBUTION_POS',
'SOURCE_CONTRIBUTION_NEG'
)])
colnames(net_node) <<- c(
'id',
'pSharing',
'unit',
'knowledge0',
'degree',
'contribution',
'contributionPos',
'contributionNeg'
)
net_edge <<-
distinct(dat[, c('SOURCE', 'TARGET', 'IS_CONNECTED', 'CONTRIBUTION')])
net_edge <<- na.omit(net_edge)
colnames(net_edge) <<-
c('from', 'to', 'isConnected', 'contribution')
if (is_contribution) {
edge_alpha <- .25
net_edge <<- net_edge[net_edge$contribution > 0, ]
} else{
net_edge <<- net_edge[net_edge$isConnected == 1, ]
}
if (is_contribution) {
edge_alpha <- .25
net_node$type <<- ifelse(net_node$pSharing > .5, p_sharing_label[1], p_sharing_label[2])
# net_node <<- net_node[net_node$contribution > 0,] # This removes "pure taker"?
} else{
net_edge <<- net_edge[net_edge$from > net_edge$to, ]
}
net <- graph_from_data_frame(
vertices = net_node,
d = net_edge,
directed = ifelse(is_contribution, F, T)
)
set_vertex_attr(net, 'ec', value = eigen_centrality(net)$vector)
layout <- create_layout(net, layout = 'fr')
pp <- ggraph(layout)
if (is_contribution) {
if( is_ratio) {
pp <- pp +
# geom_edge_link(aes(alpha = contribution),
geom_edge_fan(
aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(aes(size = contribution,
fill = type),
# color = 'black',
shape = 21
) +
scale_alpha_continuous(range = c(0, edge_alpha)) +
scale_size_continuous(range = c(node_size/5, node_size)) +
scale_fill_manual(values = fill_npg)
}else{
pp <- pp +
geom_edge_fan(aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(aes(size = contribution),
shape = 21,
color = 'black',
fill = 'gray'
) +
scale_size_continuous(range = c(node_size/5, node_size)) +
scale_alpha_continuous(range = c(0, edge_alpha))
}
} else{
pp <- pp +
geom_edge_fan(color = 'black',
width = edge_width,
alpha = edge_alpha) +
geom_node_point(aes(size = degree),
shape = 21,
color = 'black',
fill = 'gray'
) +
scale_size_continuous(range = c(node_size/5, node_size))
}
pp <- pp +
theme_void() +
# theme(legend.position = 'none')
theme(
legend.text = element_text(size=legend_size, color='black'),
legend.title = element_blank(),
legend.text.align = 0,
legend.position = 'bottom'
) +
guides(
alpha = 'none',
# fill ='none'
fill = guide_legend(nrow = 2, byrow = TRUE)
)
pp
file_out <- paste0(dirname(file), '\\',
gsub('csv', 'png', basename(file)))
ggsave(
file_out,
units = 'in',
width = fig_width,
height = fig_height,
dpi = fig_dpi
)
print(file_out)
}
}
files2print(choose.files())
library(igraph)
library(ggplot2)
library(ggraph)
library(tidygraph)
library(ggforce)
library(graphlayouts)
library(oaqc)
library(sna)
library(dplyr)
library(viridis)
library(ggsci)
# rm(list=ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
fig_width <- 2.25
fig_height <- 2.25
fig_dpi <- 1200
node_size <- 2
edge_width <- .1
edge_alpha <- .25
legend_size <- 8
is_contribution <- T
is_ratio <- T
net_node <- NULL
net_edge <- NULL
p_sharing_label <- c('Knowledge Sharer', 'Knowledge Seeker')
fill_npg <- pal_npg(palette = c('nrc'), alpha = 1)(2)
names(fill_npg) <- p_sharing_label
files2print <- function(list_file) {
for (file in list_file) {
dat <- read.csv(file)
net_node <<-
distinct(dat[, c(
'SOURCE',
'SOURCE_P_SHARING',
'SOURCE_UNIT',
'SOURCE_INIT_KNOWLEDGE',
'SOURCE_DEGREE',
'SOURCE_CONTRIBUTION',
'SOURCE_CONTRIBUTION_POS',
'SOURCE_CONTRIBUTION_NEG'
)])
colnames(net_node) <<- c(
'id',
'pSharing',
'unit',
'knowledge0',
'degree',
'contribution',
'contributionPos',
'contributionNeg'
)
net_edge <<-
distinct(dat[, c('SOURCE', 'TARGET', 'IS_CONNECTED', 'CONTRIBUTION')])
net_edge <<- na.omit(net_edge)
colnames(net_edge) <<-
c('from', 'to', 'isConnected', 'contribution')
if (is_contribution) {
edge_alpha <- .25
net_edge <<- net_edge[net_edge$contribution > 0, ]
} else{
net_edge <<- net_edge[net_edge$isConnected == 1, ]
}
if (is_contribution) {
edge_alpha <- .25
net_node$type <<- ifelse(net_node$pSharing > .5, p_sharing_label[1], p_sharing_label[2])
# net_node <<- net_node[net_node$contribution > 0,] # This removes "pure taker"?
} else{
net_edge <<- net_edge[net_edge$from > net_edge$to, ]
}
net <- graph_from_data_frame(
vertices = net_node,
d = net_edge,
directed = ifelse(is_contribution, F, T)
)
set_vertex_attr(net, 'ec', value = eigen_centrality(net)$vector)
layout <- create_layout(net, layout = 'fr')
pp <- ggraph(layout)
if (is_contribution) {
if( is_ratio) {
pp <- pp +
# geom_edge_link(aes(alpha = contribution),
geom_edge_fan(
aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(aes(size = contribution,
fill = type),
# color = 'black',
shape = 21
) +
scale_alpha_continuous(range = c(0, edge_alpha)) +
scale_size_continuous(range = c(node_size/5, node_size)) +
scale_fill_manual(values = fill_npg)
}else{
pp <- pp +
geom_edge_fan(aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(aes(size = contribution),
shape = 21,
color = 'black',
fill = 'gray'
) +
scale_size_continuous(range = c(node_size/5, node_size)) +
scale_alpha_continuous(range = c(0, edge_alpha))
}
} else{
pp <- pp +
geom_edge_fan(color = 'black',
width = edge_width,
alpha = edge_alpha) +
geom_node_point(aes(size = degree),
shape = 21,
color = 'black',
fill = 'gray'
) +
scale_size_continuous(range = c(node_size/5, node_size))
}
pp <- pp +
theme_void() +
# theme(legend.position = 'none')
theme(
legend.text = element_text(size=legend_size, color='black'),
legend.title = element_blank(),
legend.text.align = 0,
legend.position = 'bottom'
) +
guides(
alpha = 'none',
size = 'none',
fill = guide_legend(nrow = 2, byrow = TRUE)
)
pp
file_out <- paste0(dirname(file), '\\',
gsub('csv', 'png', basename(file)))
ggsave(
file_out,
units = 'in',
width = fig_width,
height = fig_height,
dpi = fig_dpi
)
print(file_out)
}
}
files2print(choose.files())
