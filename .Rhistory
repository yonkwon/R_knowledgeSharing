}
}
files2print(choose.files())
library(igraph)
library(ggplot2)
library(ggraph)
library(tidygraph)
library(ggforce)
library(graphlayouts)
library(oaqc)
library(sna)
library(dplyr)
library(viridis)
library(ggsci)
# rm(list=ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
fig_width <- 2
fig_height <- 2
fig_dpi <- 1200
node_size <- 2
edge_width <- .1
edge_alpha <- 1
legend_size <- 8
is_contribution <- T
is_ratio <- T
net <- NULL
net_node <- NULL
net_edge <- NULL
p_sharing_label <- c('Knowledge Sharer', 'Knowledge Seeker')
fill_npg <- pal_npg(palette = c('nrc'), alpha = 1)(2)
names(fill_npg) <- p_sharing_label
files2print <- function(list_file) {
for (file in list_file) {
dat <- read.csv(file)
net_node <<-
distinct(dat[, c(
'SOURCE',
'SOURCE_P_SHARING',
'SOURCE_UNIT',
'SOURCE_INIT_KNOWLEDGE',
'SOURCE_DEGREE',
'SOURCE_CONTRIBUTION',
'SOURCE_CONTRIBUTION_POS',
'SOURCE_CONTRIBUTION_NEG'
)])
colnames(net_node) <<- c(
'id',
'pSharing',
'unit',
'knowledge0',
'degree',
'contribution',
'contributionPos',
'contributionNeg'
)
net_edge <<-
distinct(dat[, c('SOURCE', 'TARGET', 'IS_CONNECTED', 'CONTRIBUTION')])
net_edge <<- na.omit(net_edge)
colnames(net_edge) <<-
c('from', 'to', 'isConnected', 'contribution')
if (is_contribution) {
edge_alpha <- .25
net_edge <<- net_edge[net_edge$contribution > 0, ]
} else{
net_edge <<- net_edge[net_edge$isConnected == 1, ]
}
if (is_contribution) {
edge_alpha <- .25
net_node$type <<- ifelse(net_node$pSharing > .5, p_sharing_label[1], p_sharing_label[2])
# net_node <<- net_node[net_node$contribution > 0,] # This removes "pure taker"?
} else{
net_edge <<- net_edge[net_edge$from > net_edge$to, ]
}
net <<- graph_from_data_frame(
vertices = net_node,
d = net_edge,
directed = ifelse(is_contribution, F, T)
)
set_vertex_attr(net, 'ec', value = eigen_centrality(net)$vector)
if (!is_contribution) {
to_rm <- net_node[net_node$degree < 2,]$id
if(length(to_rm) > 0){
net <<- net - as.character(to_rm)
}
}
layout <- create_layout(net, layout = 'fr')
pp <- ggraph(layout) + theme_void()
if (is_contribution) {
pp <- pp +
# geom_edge_link(aes(alpha = contribution),
geom_edge_fan(
aes(alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(aes(size = contribution,
fill = type),
# color = 'black',
shape = 21
) +
scale_edge_alpha_continuous(range = c(0, edge_alpha), guide = 'none') +
scale_size_continuous(range = c(node_size/5, node_size), guide = 'none') +
scale_fill_manual(values = fill_npg)
if( is_ratio ) {
pp <- pp +
guides(
fill = guide_legend(nrow = 2, byrow = TRUE)
) +
theme(
legend.position = 'bottom',
legend.text = element_text(size=legend_size, color='black'),
legend.title = element_blank(),
legend.text.align = 0,
)
}else{
pp <- pp +
theme(legend.position = 'none')
}
} else{
pp <- pp +
geom_edge_fan(color = 'black',
width = edge_width,
alpha = edge_alpha) +
geom_node_point(aes(size = degree),
shape = 21,
color = 'black',
fill = 'gray'
) +
scale_size_continuous(range = c(node_size/5, node_size)) +
theme(legend.position = 'none')
}
pp
file_out <- paste0(dirname(file), '\\',
gsub('csv', 'png', basename(file)))
ggsave(
file_out,
units = 'in',
width = fig_width,
height = fig_height,
dpi = fig_dpi
)
print(file_out)
}
}
files2print(choose.files())
library(igraph)
library(ggplot2)
library(ggraph)
library(tidygraph)
library(ggforce)
library(graphlayouts)
library(oaqc)
library(sna)
library(dplyr)
library(viridis)
library(ggsci)
# rm(list=ls())
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
fig_width <- 2
fig_height <- 2
fig_dpi <- 1200
node_size <- 2
edge_width <- .1
edge_alpha <- .5
legend_size <- 8
is_contribution <- T
is_ratio <- T
net <- NULL
net_node <- NULL
net_edge <- NULL
p_sharing_label <- c('Knowledge Sharer', 'Knowledge Seeker')
fill_npg <- pal_npg(palette = c('nrc'), alpha = 1)(2)
names(fill_npg) <- p_sharing_label
files2print <- function(list_file) {
for (file in list_file) {
dat <- read.csv(file)
net_node <<-
distinct(dat[, c(
'SOURCE',
'SOURCE_P_SHARING',
'SOURCE_UNIT',
'SOURCE_INIT_KNOWLEDGE',
'SOURCE_DEGREE',
'SOURCE_CONTRIBUTION',
'SOURCE_CONTRIBUTION_POS',
'SOURCE_CONTRIBUTION_NEG'
)])
colnames(net_node) <<- c(
'id',
'pSharing',
'unit',
'knowledge0',
'degree',
'contribution',
'contributionPos',
'contributionNeg'
)
net_edge <<-
distinct(dat[, c('SOURCE', 'TARGET', 'IS_CONNECTED', 'CONTRIBUTION')])
net_edge <<- na.omit(net_edge)
colnames(net_edge) <<-
c('from', 'to', 'isConnected', 'contribution')
if (is_contribution) {
edge_alpha <- .25
net_edge <<- net_edge[net_edge$contribution > 0, ]
} else{
net_edge <<- net_edge[net_edge$isConnected == 1, ]
}
if (is_contribution) {
edge_alpha <- .25
net_node$type <<- ifelse(net_node$pSharing > .5, p_sharing_label[1], p_sharing_label[2])
# net_node <<- net_node[net_node$contribution > 0,] # This removes "pure taker"?
} else{
net_edge <<- net_edge[net_edge$from > net_edge$to, ]
}
net <<- graph_from_data_frame(
vertices = net_node,
d = net_edge,
directed = ifelse(is_contribution, F, T)
)
set_vertex_attr(net, 'ec', value = eigen_centrality(net)$vector)
if (!is_contribution) {
to_rm <- net_node[net_node$degree < 2,]$id
if(length(to_rm) > 0){
net <<- net - as.character(to_rm)
}
}
layout <- create_layout(net, layout = 'fr')
pp <- ggraph(layout) + theme_void()
if (is_contribution) {
pp <- pp +
# geom_edge_link(aes(alpha = contribution),
geom_edge_fan(
aes(edge_alpha = contribution),
color = 'black',
width = edge_width) +
geom_node_point(aes(size = contribution,
fill = type),
# color = 'black',
shape = 21
) +
scale_edge_alpha_continuous(range = c(0, edge_alpha), guide = 'none') +
scale_size_continuous(range = c(node_size/5, node_size), guide = 'none') +
scale_fill_manual(values = fill_npg)
if( is_ratio ) {
pp <- pp +
guides(
fill = guide_legend(nrow = 2, byrow = TRUE)
) +
theme(
legend.position = 'bottom',
legend.text = element_text(size=legend_size, color='black'),
legend.title = element_blank(),
legend.text.align = 0,
)
}else{
pp <- pp +
theme(legend.position = 'none')
}
} else{
pp <- pp +
geom_edge_fan(color = 'black',
width = edge_width,
alpha = edge_alpha) +
geom_node_point(aes(size = degree),
shape = 21,
color = 'black',
fill = 'gray'
) +
scale_size_continuous(range = c(node_size/5, node_size)) +
theme(legend.position = 'none')
}
pp
file_out <- paste0(dirname(file), '\\',
gsub('csv', 'png', basename(file)))
ggsave(
file_out,
units = 'in',
width = fig_width,
height = fig_height,
dpi = fig_dpi
)
print(file_out)
}
}
files2print(choose.files())
set_fig7_p.s <- 1:data$para.l.p.s
set_fig7_beta <- c(1, round(data$para.l.b/2), data$para.l.b)
set_fig7_beta <- c(1, 2, data$para.l.b)
set_fig7_time <- data$para.time
set_fig7_outcome <- data$r.know.avg[, , , set_fig7_time]
set_fig7_outcome_label <- 'Innovative Capability'
set_fig7_outcome <- data$r.cent.avg[, , , set_fig7_time]
set_fig7_outcome_label <- 'Centralization of Contribution'
df_fig7 <- data.frame()
for(nt in 1:data$para.l.net.type) {
for( beta in set_fig7_beta) {
df_next <- data.frame(
nt = network_character_label[nt],
beta = paste0('beta==', sprintf(data$para.a.b[beta], fmt = '%#.1f')),
p.s = data$para.a.p.s[set_fig7_p.s],
outcome = set_fig7_outcome[nt, beta, ]
)
df_fig7 <- rbind(df_fig7, df_next)
}
}
fig7 <- ggplot(df_fig7, aes(x = p.s, y = outcome, color = beta)) +
geom_line() +
facet_grid(.~nt) +
scale_color_npg(labels = parse_format()) +
scale_linetype_manual(labels = parse_format(), values = c('dotted','dashed','solid')) +
scale_x_continuous(expand = c(0, 0)) +
# xlab(bquote(italic(p[Sharing])~'(Knowledge Sharing Level)')) +
xlab(bquote(italic(p[Sharing])~'(Proportion of Knowledge Sharers)')) +
ylab(set_fig7_outcome_label) +
theme_bw() +
theme(
text=element_text(size=label_size, color='black'),
axis.title=element_text(size=label_size, color='black'),
axis.text=element_text(size=tick_label_size, color='black'),
axis.text.x=element_text(angle = 45, hjust=1),
panel.spacing.x = unit(8, 'mm'),
strip.background = element_blank(),
strip.placement = 'outside',
legend.title = element_blank(),
legend.box='vertical',
legend.position = 'bottom'
)
fig7
fig7_params_label <- paste0(
'fig7',
'p.s', paste0(set_fig7_p.s, collapse = ","),
'time', set_fig7_time,
'res_', set_fig7_outcome_label
)
ggsave(
paste0(fig_id, '_', fig7_params_label, '.png'),
plot = fig7,
units = 'in',
width = 6.5,
height = 3,
dpi = fig_dpi
)
# rm(list=c('data'))
setwd(dirname(rstudioapi::getSourceEditorContext()$path)) # Set SRC DIR as WD
file_data <- file.choose()
data <- readMat(file_data)
fig_id <- tools::file_path_sans_ext((basename(file_data)))
set_fig7_p.s <- 1:data$para.l.p.s
set_fig7_beta <- c(1, round(data$para.l.b/2), data$para.l.b)
set_fig7_beta <- c(1, 2, data$para.l.b)
set_fig7_time <- data$para.time
set_fig7_outcome <- data$r.know.avg[, , , set_fig7_time]
set_fig7_outcome_label <- 'Innovative Capability'
set_fig7_outcome <- data$r.cent.avg[, , , set_fig7_time]
set_fig7_outcome_label <- 'Centralization of Contribution'
df_fig7 <- data.frame()
for(nt in 1:data$para.l.net.type) {
for( beta in set_fig7_beta) {
df_next <- data.frame(
nt = network_character_label[nt],
beta = paste0('beta==', sprintf(data$para.a.b[beta], fmt = '%#.1f')),
p.s = data$para.a.p.s[set_fig7_p.s],
outcome = set_fig7_outcome[nt, beta, ]
)
df_fig7 <- rbind(df_fig7, df_next)
}
}
fig7 <- ggplot(df_fig7, aes(x = p.s, y = outcome, color = beta)) +
geom_line() +
facet_grid(.~nt) +
scale_color_npg(labels = parse_format()) +
scale_linetype_manual(labels = parse_format(), values = c('dotted','dashed','solid')) +
scale_x_continuous(expand = c(0, 0)) +
# xlab(bquote(italic(p[Sharing])~'(Knowledge Sharing Level)')) +
xlab(bquote(italic(p[Sharing])~'(Proportion of Knowledge Sharers)')) +
ylab(set_fig7_outcome_label) +
theme_bw() +
theme(
text=element_text(size=label_size, color='black'),
axis.title=element_text(size=label_size, color='black'),
axis.text=element_text(size=tick_label_size, color='black'),
axis.text.x=element_text(angle = 45, hjust=1),
panel.spacing.x = unit(8, 'mm'),
strip.background = element_blank(),
strip.placement = 'outside',
legend.title = element_blank(),
legend.box='vertical',
legend.position = 'bottom'
)
fig7
fig7_params_label <- paste0(
'fig7',
'p.s', paste0(set_fig7_p.s, collapse = ","),
'time', set_fig7_time,
'res_', set_fig7_outcome_label
)
ggsave(
paste0(fig_id, '_', fig7_params_label, '.png'),
plot = fig7,
units = 'in',
width = 6.5,
height = 3,
dpi = fig_dpi
)
set_fig3a_beta <- 1:data$para.l.b
# set_fig3a_p.s <- c(1, 11, 21)
# set_fig3a_p.s <- c(1, 6, 11)
set_fig3a_p.s <- c(1, 3, 21 )
# set_fig3a_p.s <- c(1, 2,3 ,4,5)
# set_fig3a_p.s <- c(2, 4)
set_fig3a_time <- data$para.time
set_fig3a_outcome <- data$r.know.avg[, set_fig3a_beta, , set_fig3a_time]
set_fig3a_outcome_label <- 'Innovative Capability'
set_fig3a_outcome <- data$r.cent.avg[, , , set_fig3a_time]
set_fig3a_outcome_label <- 'Centralization of Contribution'
df_fig3a <- data.frame()
for(nt in 1:data$para.l.net.type) {
for (p.s in set_fig3a_p.s) {
df_next <- data.frame(
nt = network_character_label[nt],
beta = data$para.a.b[set_fig3a_beta],
# p.s = paste0('p[sharing]==', sprintf(data$para.a.p.s[p.s], fmt = '%#.1f')),
p.s = paste0('p[sharing]==', sprintf(data$para.a.p.s[p.s], fmt = '%#.2f')),
outcome = set_fig3a_outcome[nt, , p.s]
)
df_fig3a <- rbind(df_fig3a, df_next)
}
}
set_fig3a_beta <- 1:data$para.l.b
# set_fig3a_p.s <- c(1, 11, 21)
# set_fig3a_p.s <- c(1, 6, 11)
set_fig3a_p.s <- c(1, 3, 21 )
# set_fig3a_p.s <- c(1, 2,3 ,4,5)
# set_fig3a_p.s <- c(2, 4)
set_fig3a_time <- data$para.time
set_fig3a_outcome <- data$r.know.avg[, set_fig3a_beta, , set_fig3a_time]
set_fig3a_outcome_label <- 'Innovative Capability'
set_fig3a_outcome <- data$r.cent.avg[, set_fig3a_beta, , set_fig3a_time]
set_fig3a_outcome_label <- 'Centralization of Contribution'
df_fig3a <- data.frame()
for(nt in 1:data$para.l.net.type) {
for (p.s in set_fig3a_p.s) {
df_next <- data.frame(
nt = network_character_label[nt],
beta = data$para.a.b[set_fig3a_beta],
# p.s = paste0('p[sharing]==', sprintf(data$para.a.p.s[p.s], fmt = '%#.1f')),
p.s = paste0('p[sharing]==', sprintf(data$para.a.p.s[p.s], fmt = '%#.2f')),
outcome = set_fig3a_outcome[nt, , p.s]
)
df_fig3a <- rbind(df_fig3a, df_next)
}
}
set_fig3a_beta <- 1:data$para.l.b
# set_fig3a_p.s <- c(1, 11, 21)
# set_fig3a_p.s <- c(1, 6, 11)
set_fig3a_p.s <- c(1, 2, 3 )
# set_fig3a_p.s <- c(1, 2,3 ,4,5)
# set_fig3a_p.s <- c(2, 4)
set_fig3a_time <- data$para.time
set_fig3a_outcome <- data$r.know.avg[, set_fig3a_beta, , set_fig3a_time]
set_fig3a_outcome_label <- 'Innovative Capability'
set_fig3a_outcome <- data$r.cent.avg[, set_fig3a_beta, , set_fig3a_time]
set_fig3a_outcome_label <- 'Centralization of Contribution'
df_fig3a <- data.frame()
for(nt in 1:data$para.l.net.type) {
for (p.s in set_fig3a_p.s) {
df_next <- data.frame(
nt = network_character_label[nt],
beta = data$para.a.b[set_fig3a_beta],
# p.s = paste0('p[sharing]==', sprintf(data$para.a.p.s[p.s], fmt = '%#.1f')),
p.s = paste0('p[sharing]==', sprintf(data$para.a.p.s[p.s], fmt = '%#.2f')),
outcome = set_fig3a_outcome[nt, , p.s]
)
df_fig3a <- rbind(df_fig3a, df_next)
}
}
fig3a <- ggplot(df_fig3a, aes(x = beta, y = outcome, color = p.s)) +
geom_line() +
facet_grid(.~nt) +
scale_color_npg(labels = parse_format()) +
scale_linetype_manual(labels = parse_format(), values = c('dotted','dashed','solid')) +
scale_x_continuous(expand = c(0, 0)) +
xlab(bquote(beta)) +
ylab(set_fig3a_outcome_label) +
theme_bw() +
theme(
text=element_text(size=label_size, color='black'),
axis.title=element_text(size=label_size, color='black'),
axis.text=element_text(size=tick_label_size, color='black'),
axis.text.x=element_text(angle = 45, hjust=1),
panel.spacing.x = unit(8, 'mm'),
strip.background = element_blank(),
strip.placement = 'outside',
legend.title = element_blank(),
legend.box='vertical',
legend.position = 'bottom'
)
fig3a
fig3a_params_label <- paste0(
'fig3a',
'p.s', paste0(set_fig3a_p.s, collapse = ","),
'time', set_fig3a_time,
'res_', set_fig3a_outcome_label
)
ggsave(
paste0(fig_id, '_', fig3a_params_label, '.png'),
plot = fig3a,
units = 'in',
width = 6.5,
height = 3,
dpi = fig_dpi
)
